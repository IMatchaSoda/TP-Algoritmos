/*Una empresa constructora tiene varias obras en ejecución y 8 grupos de obreros que trabajan en las
obras. De cada obra se conoce el nombre y dni del propietario, código interno (se lo asigna el
sistema), tipo de obra (construcción, remodelación, ampliación, etc.), el tiempo estimado de
ejecución (expresado en días), estado de avance (porcentaje), el jefe de obra y el costo. De cada
obrero se almacena su nombre y apellido, dni, nro legajo, sueldo y cargo (capataz, albañil, peón,
plomero, electricista, etc.). El jefe de obra es un obrero responsable de una obra por lo cual cobra
una bonificación especial a parte de su sueldo y dirige al grupo de obreros que trabajan en dicha
obra. De cada grupo de obreros se conoce el código de obra en la que están trabajando (0 en caso
de no estar asignado a ninguna obra) y los integrantes.
Se deberá desarrollar una aplicación, utilizando las clases que considere necesarias, utilizando
herencia cuando corresponda. La aplicación debe proveer, mediante un menú, las siguientes
funcionalidades:
a) Contratar un obrero nuevo (se agrega a la empresa y a un grupo)
b) Eliminar un obrero (se elimina de la empresa y de su grupo)
c) Submenú de impresión: listado de obreros, de obras en ejecución con más del 50% de
avance, de obras finalizadas y de jefes
d) Agregar una obra y asignarle un jefe. Se debe crear el jefe y asociarle el grupo de obreros
que va a dirigir. Verificar que haya grupo libre; en caso contrario se debe levantar una
excepción que informe lo sucedido.
e) Modificar el estado de avance de una obra. Si el estado de avance llega al 100% la obra debe
darse por finalizada, se elimina del listado de obras en ejecución y se guarda en el de obras
finalizadas
f) Dar de baja a un jefe (se elimina de la empresa, se desvincula de la obra y se libera el grupo
de obreros asignado)
*/
using System;
using System.Collections;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace TPAlgoritmos
{
	class Program
	{
		public static void Main(string[] args)
		{
			menu();
			Console.ReadKey(true);
		}
		public static void menu(){
			bool salir=false;
			string opcion,opcionL;
			
			
			while (!salir){
				
				Console.WriteLine("************************************");
				Console.WriteLine("elija una de las siguientes opciones:");
				Console.WriteLine("************************************");
				Console.WriteLine("a) Contratar un obrero nuevo ");
				Console.WriteLine("b) Eliminar un obrero ");
				Console.WriteLine("c)  ");//Submenu de impresion
				Console.WriteLine("d) Agregar Obra. ");
				Console.WriteLine("e) Modificar estado de avance de una obra. ");
				Console.WriteLine("f) Dar de baja a un jefe. ");
				Console.WriteLine("g) Salir. ");
				Console.WriteLine("************************************");
				opcion=Console.ReadLine();
				opcionL=opcion.ToLower();
				switch(opcionL){
					case "a":
						
						break;
					case "b":
					Console.Clear();
					 
                        break;
					 
                    case "c":
					Console.Clear();
					Console.WriteLine("************************************");
					Console.WriteLine("elija una de las siguientes opciones:");
					Console.WriteLine("************************************");
					string op2=console.ReadLine();
					string op2L=op2.ToLower();
					switch(op2L){
						Console.WriteLine("a)  ");
						Console.WriteLine("b)  ");
						Console.WriteLine("c)  ");
						Console.WriteLine("d)  ");
					}


					
						break;
                    case "d":
					Console.Clear();
					
						
						break;
                    case "e":
					Console.Clear();
					
					break;
                    case "f":
					Console.Clear();
						
						break;
                    case "g":
					Console.Clear();

                    salir=true;
					 Thread.Sleep(2000);
						
						break;
					 default:
                        Console.Clear();
                        Console.WriteLine("La opcion ingresada es inexistente, por favor trate de nuevo." + " " + "Espere a que reaparezca el menu.");
                        Thread.Sleep(2000);
                        Console.Clear();
                        break;                   
				}
			}
		}
			
			
		}
	}
	

